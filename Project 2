//============================================================================
// Name        : Project 2
// Author      : Tyler Charles
//============================================================================

#include <iostream>

#include <fstream>

#include <vector>

using namespace std;

struct Course {

    string courseNumber;

    string name;

    vector<string> prerequisites;

}

vector<string> tokenize(string s, string del = " ") {

    vector<string> stringArray;

    int start = 0;

    int end = s.find(del);

    while (end != -1) {

        stringArray.push_back(s.substr(start, end - start));

        start = end + del.size();

        end = s.find(del, start);

    }

    stringArray.push_back(s.substr(start, end - start));

    return stringArray;

}

// option 1

vector<Course> LoadDataStructure() {

    ifstream fin("abcu.txt",ios::in);

    vector<Course> courses;

    string line;

    while (1)

    {

        getline(fin, line);

        if (line == "-1")

            break;

        Course course;

        vector<string> tokenizedInformation = tokenize(line, ",");

        course.courseNumber = tokenizedInformation[0];

        course.name = tokenizedInformation[1];

        for (int i = 2; i < tokenizedInformation.size(); i++) {

            course.prerequisites.push_back(tokenizedInformation[i]);

        }

        courses.push_back(course);

    }

    fin.close();

    return courses;

}

//option 2

void printCourse(Course course)

{

    string courseNumber = course.courseNumber;

    string name = course.name;

    vector<string> prerequisites = course.prerequisites;

    cout << "Course Number: " << courseNumber << endl;

    cout << "Course Name: " << name << endl;

    cout << "Prerequisites: ";

    for (int i = 0; i < prerequisites.size(); i++) {

        cout << prerequisites[i] << " ";

    }

    cout << "\n\n";

}

void printCourseList(vector<Course> courses) {

    int n = courses.size();

    for (int i = 0; i < n - 1; i++) {

        for (int j = 0; j < n - i - 1; j++) {

            if (courses[j].courseNumber > courses[j + 1].courseNumber) {

                swap(courses[j + 1], courses[j]);

            }

        }

    }

    for (int i = 0; i < n; i++)

    {

        printCourse(courses[i]);

    }

}

//option 3

void searchCourse(vector<Course> courses) {

    int n = courses.size();

    string courseNumber;

    int f = 0;

    cout << "Enter Course Number: ";

    cin >> courseNumber;

    for (int i = 0; i < n; i++) {

        if (courses[i].courseNumber == courseNumber) {

            f = 1;

            printCourse(courses[i]);

            break;

        }

    }

    if (f == 0) {

        cout << "Course number not found\n";

    }

}

int main(int argc, char** argv) {

    vector<Course> courses;



    //Menu

    cout << "1.Load Data Structure\n";

    cout << "2.Print Course List\n";

    cout << "3.Print Course\n";

    cout << "4.Exit\n";



    int ch;



    //option 4

    do
    {

        cout << "\nEnter your choice: ";

        cin >> ch;

        switch (ch)
        {

            case 1: courses = LoadDataStructure(); break;

            case 2: printCourseList(courses); break;

            case 3: searchCourse(courses); break;

            case 4: cout << "Exit\n"; break;

            default: cout << "Not valid\n";

        }



    }

    while (ch != 4);


    return 0;

}